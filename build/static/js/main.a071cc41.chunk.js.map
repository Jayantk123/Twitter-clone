{"version":3,"sources":["SidebarOption.js","Sidebar.js","firebase.js","TweetBox.js","Post.js","Feed.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","Button","variant","fullWidth","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","TweetBox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","Avatar","onChange","e","target","value","type","placeholder","onClick","preventDefault","collection","add","displayName","username","verified","image","avatar","Post","forwardRef","ref","src","alt","ChatBubbleOutline","fontSize","Repeat","FavoriteBorder","Publish","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","Widgets","tweetId","sourceType","screenName","options","height","url","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a071cc41.chunk.js","sourcesContent":["import React from 'react'\r\nimport './SidebarOption.css';\r\nfunction SidebarOption({ active , text , Icon}) {\r\n    return (\r\n      <div className={`sidebarOption  ${active && \"sidebarOption--active\"}`}>\r\n   \r\n     {/*making sidebar icon active....showing color when the page is open*/}\r\n      <Icon />\r\n      <h2>{text}</h2>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React from 'react'\r\nimport './Sidebar.css';\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { Button } from \"@material-ui/core\";\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            {/*twitter icon */}\r\n            <TwitterIcon className=\"sidebar__twitterIcon\" />\r\n            <SidebarOption active Icon={HomeIcon} text=\"Home\"/>\r\n            <SidebarOption Icon={SearchIcon} text=\"Explore\" />\r\n      <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\" />\r\n      <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n      <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmarks\" />\r\n      <SidebarOption Icon={ListAltIcon} text=\"Lists\" />\r\n    \r\n      <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n      <SidebarOption Icon={MoreHorizIcon} text=\"More\" />\r\n           \r\n            {/*sidebaroption*/}\r\n            {/*sidebaroption*/}\r\n            {/*sidebaroption*/}\r\n            {/*sidebaroption*/}\r\n            {/*sidebaroption*/}\r\n            {/*sidebaroption*/}\r\n\r\n            {/*button ->tweet*/}\r\n            <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\r\n        Tweet\r\n      </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCnE930a867RkvpHCDeo82z5U6fzy2LqB4\",\r\n    authDomain: \"twitter-clone-eed4f.firebaseapp.com\",\r\n    projectId: \"twitter-clone-eed4f\",\r\n    storageBucket: \"twitter-clone-eed4f.appspot.com\",\r\n    messagingSenderId: \"462425311183\",\r\n    appId: \"1:462425311183:web:ffe205e57a6f3db42cf4ba\"\r\n  };\r\n\r\n\r\n const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n/*export db*/\r\n const db = firebase.firestore();\r\n\r\n\r\n export default db;","import React,{useState} from 'react'\r\nimport './TweetBox.css';\r\nimport { Avatar, Button } from \"@material-ui/core\"; /*tweet button image avatar*/\r\nimport db from './firebase'; \r\nfunction TweetBox() {\r\n\r\nconst [tweetMessage, setTweetMessage] = useState(\"\");\r\nconst [tweetImage, setTweetImage] = useState(\"\");\r\n\r\nconst sendTweet = e =>{\r\n    e.preventDefault();/*stop refreshing during tweet click button*/\r\n\r\ndb.collection('posts').add({\r\ndisplayName: 'jk',\r\nusername: 'userjk',\r\nverified: true,\r\ntext: tweetMessage,\r\nimage: tweetImage,\r\navatar:\r\n\"https://www.facebook.com/photo?fbid=502666553966525&set=a.123796555186862\"\r\n\r\n\r\n});\r\n\r\nsetTweetMessage(\"\");\r\nsetTweetImage(\"\");\r\n};\r\n\r\n    return (\r\n        <div className=\"tweetBox\">\r\n            <form>\r\n                <div className=\"tweetBox__input\">\r\n        <Avatar />\r\n                <input \r\n                onChange={(e) => setTweetMessage(e.target.value)}/*get tweet grom user*/\r\n                value ={tweetMessage}\r\n                type=\"text\" placeholder=\"What's happening?\"></input>\r\n                </div>\r\n\r\n        <input \r\n         onChange={(e) => setTweetImage(e.target.value)}/*get tweetimagr grom user*/\r\n         value ={tweetImage}\r\n  className=\"tweetBox__imageInput\"\r\n     type=\"text\" placeholder=\"Enter image URL\"></input>\r\n                <Button onClick={sendTweet}\r\n                 type=\"submit\" className=\"tweetBox__tweetButton\">Tweet</Button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TweetBox;\r\n","import React, { forwardRef } from 'react'\r\nimport './Post.css';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport VerifiedUserOutlinedIcon from '@material-ui/icons/VerifiedUserOutlined';\r\nimport { Repeat , FavoriteBorder , Publish , ChatBubbleOutline } from '@material-ui/icons';\r\n\r\nconst Post = forwardRef(({\r\n\r\n    /*single post contain name,image,verified...*/\r\n    displayName,\r\n    username,\r\n    verified,\r\n    text,\r\n    image,\r\n    avatar }, ref) => {\r\n    \r\n    return (\r\n        <div className=\"post\" ref={ref}>\r\n          <div className=\"post__avatar\">\r\n          <Avatar src={avatar} />\r\n              </div>  \r\n              <div className=\"post__body\">\r\n                  <div className=\"post__header\">\r\n                      <div className=\"post__headerText\">\r\n                      <h3>\r\n             {displayName}{\" \"}\r\n              <span className=\"post__headerSpecial\">\r\n                 {verified && <VerifiedUserOutlinedIcon className=\"post__badge\" />} @{username}\r\n              \r\n              </span>\r\n            </h3>\r\n                        \r\n                      </div>\r\n                      <div className=\"post__headerDescription\">\r\n                          <p>{text}</p>\r\n                      </div>\r\n                  </div>\r\n\r\n                  <img src={image} alt=\"\"/>\r\n                  \r\n\r\n                  <div className=\"post__footer\">\r\n          <ChatBubbleOutline fontSize=\"small\" />\r\n          <Repeat fontSize=\"small\" />\r\n          <FavoriteBorder fontSize=\"small\" />\r\n          <Publish fontSize=\"small\" />\r\n                 </div>\r\n        </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Post;\r\n","import React, {useState, useEffect} from 'react';\r\nimport TweetBox from \"./TweetBox\";\r\nimport './Feed.css';\r\nimport Post from \"./Post\";\r\nimport db from './firebase';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n\r\nexport default function Feed() {\r\nconst [posts, setPosts] = useState([]);\r\n\r\n\r\nuseEffect ( () => {\r\ndb.collection('posts').onSnapshot(snapshot => (\r\n    setPosts(snapshot.docs.map(doc => doc.data()))\r\n    /*give all of the data in array from fb*/\r\n))\r\n}, []);\r\n    return (\r\n    <div className=\"feed\">\r\n      <div className=\"feed__header\">\r\n        <h2>Home</h2>\r\n      </div>\r\n      <TweetBox />\r\n\r\n      <FlipMove>\r\n      {posts.map((post) => (\r\n        <Post\r\n        key={post.text}/*firebase document id*/\r\n          displayName={post.displayName}\r\n          username={post.username}\r\n          verified={post.verified}\r\n          text={post.text}\r\n          avatar={post.avatar}\r\n          image={post.image}\r\n        />\r\n      ))}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport './Widgets.css';\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed,\r\n} from \"react-twitter-embed\";\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\n\r\nfunction Widgets() {\r\n    return (\r\n        <div className=\"widgets\">\r\n           <div className=\"widgets__input\">\r\n               <Search className=\"widgets__searchIcon\"/>\r\n               <input type=\"text\" placeholder=\"Search Twitter\"  />\r\n           </div>\r\n<div className=\"widgets__widgetContainer\">\r\n    <h2>What's Happening</h2>\r\n    <TwitterTweetEmbed tweetId={\"1307046632517664771\"} />\r\n    <TwitterTimelineEmbed\r\n          sourceType=\"profile\"\r\n          screenName=\"timesofindia\"\r\n          options={{ height: 400 }}\r\n        />\r\n\r\n<TwitterShareButton\r\n          url={\"https://jayantk.cf/?i=1\"}\r\n          options={{ text: \"React Developer\" }} /*go to twitter and post*/\r\n        />\r\n</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import React from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport  Widgets from \"./Widgets\";\nfunction App() {\n  return (\n    <div className=\"app\">\n  \n  {/*sidebar*/}\n  <Sidebar />\n  {/*feed*/}\n  <Feed/>\n  {/*widgets*/}\n  <Widgets />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}